@using Model.ViewModels.CodeViewModels
@using static Newtonsoft.Json.JsonConvert
@model CodeViewModel

@{
    ViewData["Title"] = ViewBag.PageState.OperatorName + " codes";
}

<h2>Codes for @ViewBag.PageState.OperatorName</h2>
<hr />

@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger" role="alert">@TempData["ErrorMessage"]</div>
}

<h4>Add Code</h4>
<div class="row">
    <div class="col-md-4">
        <form action="@Url.Action("Codes", "Code", ViewBag.PageState as PageState)" method="post" asp-antiforgery="true">
            <div class="form-group">
                <input asp-for="OperatorCode" class="form-control code" placeholder="Example: +38066" />
                <span asp-validation-for="OperatorCode" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add
            </button>
            <a class="btn btn-success" role="button" asp-action="Operators" asp-controller="Operator">
                <span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span> Back
            </a>
        </form>
    </div>
</div>

<hr />
<h4>Codes list</h4>

@{await Html.RenderPartialAsync("SearchCodes", new CodeSearchViewModel() { SearchQuerry = ViewBag.PageState.SearchQuerry });}

@foreach (CodeViewModel iter in ViewBag.Codes)
{
    { await Html.RenderPartialAsync("Code", iter); }
}


@if (ViewBag.PageState.LastPage > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (ViewBag.PageState.Page == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("PreviousPage", "Code", ViewBag.PageState as PageState)">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= ViewBag.PageState.LastPage; i++)
            {
                if (i == ViewBag.PageState.Page)
                {
                    <li class="page-item active">
                        <a class="page-link" href="#">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="SelectPage" asp-controller="Code"
                           asp-route-Page="@i" asp-route-pageStateJson="@SerializeObject(ViewBag.PageState)">@i</a>
                    </li>
                }
            }
            @if (ViewBag.PageState.Page == ViewBag.PageState.LastPage)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">
                        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("NextPage", "Code", ViewBag.PageState as PageState)">
                        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}



